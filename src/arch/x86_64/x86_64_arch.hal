// src/arch/x86_64/x86_64_arch.hal

//! Configura√ß√µes da Hardware Abstraction Layer (HAL) para x86_64.
//! 
//! Cont√©m constantes de endere√ßamento de mem√≥ria e I/O espec√≠ficas para esta arquitetura.

#![allow(dead_code)]

// ------------------------------------------------------------------------
// --- ‚öôÔ∏è Configura√ß√£o Geral da Arquitetura ---
// ------------------------------------------------------------------------

/// String de identifica√ß√£o da arquitetura.
pub const ARCH_NAME: &str = "x86_64";

// ------------------------------------------------------------------------
// --- üíæ Configura√ß√£o da Mem√≥ria (Endere√ßos F√≠sicos e Virtuais) ---
// ------------------------------------------------------------------------

/// Endere√ßo base do Mapeamento de Mem√≥ria Alto (Higher Half Kernel).
/// Onde o Kernel √© mapeado no espa√ßo de endere√ßamento virtual.
pub const KERNEL_HH_BASE: usize = 0xFFFF_8000_0000_0000;

/// Endere√ßo de mem√≥ria f√≠sica de inicializa√ß√£o do Kernel.
pub const KERNEL_PHYS_START: usize = 0x100000; // 1 MB

/// Endere√ßo inicial do heap virtual do Kernel.
pub const KERNEL_HEAP_START: usize = KERNEL_HH_BASE + 0x0100_0000; // Exemplo

// ------------------------------------------------------------------------
// --- üñ•Ô∏è Dispositivos de V√≠deo e Console ---
// ------------------------------------------------------------------------

/// Endere√ßo de MMIO para o buffer de texto VGA (modo texto).
pub const VGA_TEXT_BUFFER_ADDR: usize = 0xb8000;
/// Largura da tela em caracteres (modo texto VGA).
pub const VGA_WIDTH: usize = 80;
/// Altura da tela em caracteres (modo texto VGA).
pub const VGA_HEIGHT: usize = 25;

// ------------------------------------------------------------------------
// --- üîó Portas de I/O de Dispositivos Legados (Port I/O) ---
// ------------------------------------------------------------------------

/// Porta de I/O para o Master Programmable Interrupt Controller (PIC) - Comando.
pub const PIC_MASTER_COMMAND_PORT: u16 = 0x20;
/// Porta de I/O para o Master PIC - Dados (IMR).
pub const PIC_MASTER_DATA_PORT: u16 = 0x21;

/// Porta de I/O para o Slave PIC - Comando.
pub const PIC_SLAVE_COMMAND_PORT: u16 = 0xA0;
/// Porta de I/O para o Slave PIC - Dados (IMR).
pub const PIC_SLAVE_DATA_PORT: u16 = 0xA1;

/// Porta de I/O para o Controlador de Dados PS/2.
pub const PS2_DATA_PORT: u16 = 0x60;
/// Porta de I/O para o Controlador de Status/Comando PS/2.
pub const PS2_COMMAND_PORT: u16 = 0x64;

// ------------------------------------------------------------------------
// --- ‚è±Ô∏è Temporizador (Exemplo: MMIO para HPET/APIC) ---
// ------------------------------------------------------------------------

/// Endere√ßo de MMIO para o APIC Local (se estiver usando).
pub const LOCAL_APIC_BASE: usize = 0xFEE0_0000;
